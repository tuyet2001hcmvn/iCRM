@model ProductWarrantyViewModel
@{
    ViewBag.Title = LanguageResource.Maintenance_ProWarranty;
    string CurrentArea = ConstArea.Maintenance;
    string CurrentController = ConstController.ProductWarranty;

    string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController);
    bool isHasPermissionEditProfile = HtmlExtensions.GetPermission("Customer/Profile", ConstFunction.Edit, "?Type=Account");
    bool isHasPermissionDelete = HtmlExtensions.GetPermission(CurrentUrl, ConstFunction.Delete);
}
<div class="content-header clearfix">
    <h1 class="pull-left">
        @ViewBag.Title
    </h1>
    <div class="pull-right">
        @HtmlExtensions.CreateButton(CurrentArea, CurrentController)
    </div>
</div>
<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                @using (Html.BeginForm("_Search", null, FormMethod.Post, new { @id = "frmSearch", @class = "isd-form-search" }))
                {
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.CompanyId)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(p => p.CompanyId, null, LanguageResource.Dropdownlist_All, new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.SerriNo)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(p => p.SerriNo, new { @class = "form-control text-box single-line" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.ProductWarrantyNo)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(p => p.ProductWarrantyNo, new { @class = "form-control text-box single-line" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-5">
                                    @*<div class="form-group">
                                            <div class="col-md-4">
                                                @Html.TooltipLabelFor(p => p.ProfileId)
                                                @Html.HiddenFor(p => p.ProfileId)
                                            </div>
                                            <div class="col-md-8">
                                                <div class="input-group">
                                                    @Html.TextBoxFor(p => p.ProfileName, new { @class = " form-control text-box single-line", @readonly = "readonly" })
                                                    <a class="input-group-addon btn btn-default" data-toggle="modal" data-target="#divProfileSearch">
                                                        <i class="fa fa-ellipsis-h"></i>
                                                    </a>
                                                </div>
                                            </div>
                                        </div>*@

                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.Warranty_ProfileName)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(p => p.ProfileName, new { @class = "form-control text-box single-line" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.Phone)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(p => p.Phone, new { @class = "form-control text-box single-line" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.Address)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(p => p.Address, new { @class = "form-control text-box single-line" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.Age)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownList("Age", null, LanguageResource.Dropdownlist_Choose, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.SaleOrder)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(p => p.SaleOrder, new { @class = "form-control text-box single-line" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.OrderDelivery)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(p => p.OrderDelivery, new { @class = "form-control text-box single-line" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.FromDate_From)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(p => p.FromDate_From, "{0:yyyy-MM-dd}", new { @class = "form-control text-box single-line", @type = "date" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.FromDate_To)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(p => p.FromDate_To, "{0:yyyy-MM-dd}", new { @class = "form-control text-box single-line", @type = "date" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.ToDate_From)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(p => p.ToDate_From, "{0:yyyy-MM-dd}", new { @class = "form-control text-box single-line", @type = "date" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.ToDate_To)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.TextBoxFor(p => p.ToDate_To, "{0:yyyy-MM-dd}", new { @class = "form-control text-box single-line", @type = "date" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.Actived)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.DropDownList("Actived", new List<SelectListItem>()
                                   {
                                       new SelectListItem(){Text = LanguageResource.Dropdownlist_All, Value = ""},
                                       new SelectListItem(){Text = LanguageResource.Actived_True, Value = "true"},
                                       new SelectListItem(){Text = LanguageResource.Actived_False, Value = "false"}
                                   }, new { @class = "font-control" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="col-md-3 col-md-offset-4 input-group">
                                    <select class="form-control" id="SearchTemplateId" name="SearchTemplateId">
                                        <option value="">@LanguageResource.Dropdownlist_RecentSearch</option>
                                    </select>
                                    <span class="input-group-btn" style="padding-right:25px;padding-left: 10px;">
                                        <a class="btn btn-delete-frmSearch display-none" style="color: coral;" title="Xoá mẫu tìm kiếm"><i class="fa fa-trash-o fa-lg" aria-hidden="true"></i></a>
                                        <a class="btn btn-save-frmSearch" title="Lưu mẫu tìm kiếm"><i class="fa fa-thumb-tack fa-lg" aria-hidden="true"></i></a>
                                    </span>
                                    @HtmlExtensions.SearchButton()
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="divSearchResult">
                        <table class="table table-bordered table-striped table-hover no-footer dataTableServerSide">
                            <thead class="isd-table-header">
                                <tr>
                                    <th class="text-center isd-table-th-stt">@LanguageResource.NumberIndex</th>
                                    <th>@Html.DisplayNameFor(p => p.ProductWarrantyCode)</th>
                                    <th>@Html.DisplayNameFor(p => p.ProfileName)</th>
                                    <th>@Html.DisplayNameFor(p => p.Address)</th>
                                    <th>@Html.DisplayNameFor(p => p.Phone)</th>
                                    <th>@Html.DisplayNameFor(p => p.ERPProductCode)</th>
                                    <th>@Html.DisplayNameFor(p => p.ProductName)</th>
                                    <th>@Html.DisplayNameFor(p => p.WarrantyName)</th>
                                    <th>@Html.DisplayNameFor(p => p.SerriNo)</th>
                                    <th>@Html.DisplayNameFor(p => p.ProductWarrantyNo)</th>
                                    <th>@Html.DisplayNameFor(p => p.SaleOrder)</th>
                                    <th>@Html.DisplayNameFor(p => p.OrderDelivery)</th>
                                    <th>@Html.DisplayNameFor(p => p.FromDate)</th>
                                    <th>@Html.DisplayNameFor(p => p.ToDate)</th>
                                    <th class="text-center">@Html.DisplayNameFor(p => p.Actived)</th>
                                    <th class="text-center">@LanguageResource.Actions</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="delete-confirm"></div>

@section components{
    @Html.Partial("~/Areas/Customer/Views/Profile/_ProfileSearch.cshtml", new ProfileSearchViewModel() { hasNoContact = true })
}
@section scripts {
    <script src="~/Scripts/Common/ISD.SearchTemplate.js"></script>
    <script>
        //Define it
        var currentUserId = "@CurrentUser.AccountId";
        var currentPageId = "@ViewBag.PageId";
    </script>
    <script>
        //load default and set event
        $(document).ready(function () {
            //Set lại thông tin search gần đây khi là back lại
            var modeTemplateSearch = ISD.GetQueryString("ModeSearch", window.location.href);

            if (modeTemplateSearch == "Recently") {
                LoadTemplateSearch(currentUserId, currentPageId, "Recently");
                var recentSearch = JSON.parse(localStorage.getItem('pageId-' + currentPageId));
                if (recentSearch) {
                    FillToInput(recentSearch);
                }
            } else {
                LoadTemplateSearch(currentUserId, currentPageId);
                localStorage.removeItem('pageId-' + currentPageId)
            }
            PaggingServerSideWarranty("@CurrentUrl");
            ISD.ShowMessage(window.location.href);
            ISD.Delete();
        });

        $("#btn-search").click(function () {
           
            var searchData = GetDataFormSearch()
            localStorage.setItem('pageId-' + currentPageId, searchData);
            PaggingServerSideWarranty("@CurrentUrl");
        });
        //set default form submit => click btn-search button
        $("#frmSearch").submit(function (e) {
            e.preventDefault();
            $("#btn-search").trigger("click");
        });

        var currentUrl = '@CurrentUrl';
        function PaggingServerSideWarranty(controller) {
            $(".dataTableServerSide").DataTable().clear().destroy();
            $(".dataTableServerSide")
                .on('processing.dt', function (e, settings, processing) {
                    ISD.LoadingDataTable(processing, '.dataTableServerSide');
                })
                .DataTable({
                proccessing: true,
                serverSide: true,
                paging: true,
                scrollX: true,
                //scrollCollapse: true,
                //fixedColumns: {
                //    leftColumns: 3
                //},
                ajax: {
                    type: 'POST',
                    url: "/" + controller + "/_PaggingServerSide",
                    contentType: 'application/json',
                    data: function (d) {
                        var arr = {};
                        //data search
                        var data = $("#frmSearch").serializeArray();
                        $.each(data, function (index, val) {
                            var obj = {};
                            obj[val.name] = val.value;
                            $.extend(true, arr, obj);
                        });
                        //data datatable (draw, start, length,...)
                        $.extend(true, arr, d);

                        return JSON.stringify(arr);
                    }
                },
                columns: [
                    {
                        "data": "STT",
                        "className": "text-center",
                        "orderable": false
                    },
                    {
                        "data": "ProductWarrantyCode",
                        "orderable": true,
                        "render": function (data, type, row) {
                            if (type === "display" || type === "filter") {
                                return "<a href='/" + currentUrl + "/Edit/" + row['ProductWarrantyId'] + "' title='" + data + "'>" + data + "</a>";
                            }
                            return "";
                        }
                    },
                    {
                        "data": "ProfileName",
                        "orderable": true,
                        "render": function (data, type, row) {
                            if (type === "display" || type === "filter") {
                                if ("@isHasPermissionEditProfile" == "True" || "@isHasPermissionEditProfile" == "true") {
                                    return "<a href='/Customer/Profile/Edit/" + row['ProfileId'] + "' title='" + data + "'>" + data + "</a>";
                                }
                                return data;
                            }
                            return "";
                        }
                    },
                    {
                        "data": "Address",
                        "orderable": false
                    },
                    {
                        "data": "Phone",
                        "orderable": false
                    },
                    {
                        "data": "ERPProductCode",
                        "orderable": true
                    },
                    {
                        "data": "ProductName",
                        "orderable": false
                    },
                    {
                        "data": "WarrantyName",
                        "orderable": true
                    },
                    {
                        "data": "SerriNo",
                        "orderable": false,
                        "render": function (data, type, row) {
                            if (type === "display" || type === "filter") {
                                return "<a href='/" + currentUrl + "/Edit/" + row['ProductWarrantyId'] + "' title='" + data + "'>" + data + "</a>";
                            }
                            return "";
                        }
                    },
                    {
                        "data": "ProductWarrantyNo",
                        "orderable": false,
                        "render": function (data, type, row) {
                            if (type === "display" || type === "filter") {
                                if (data != null) {
                                    return "<a href='/" + currentUrl + "/Edit/" + row['ProductWarrantyId'] + "' title='" + data + "'>" + data + "</a>";
                                }
                            }
                            return data;
                        }
                    },
                    {
                        "data": "SaleOrder",
                        "orderable": true
                    },
                    {
                        "data": "OrderDelivery",
                        "orderable": true
                    },
                    {
                        "data": "FromDate",
                        "className": "text-center",
                        "orderable": false,
                        "render": function (data, type, row) {
                            // If display or filter data is requested, format the date
                            if (type === "display" || type === "filter") {
                                return moment(data).format("DD/MM/YYYY");
                            }
                            return data;
                        }
                    },
                    {
                        "data": "ToDate",
                        "orderable": false,
                        "className": "text-center",
                        "render": function (data, type, row) {
                            // If display or filter data is requested, format the date
                            if (type === "display" || type === "filter") {
                                return moment(data).format("DD/MM/YYYY");
                            }
                            return data;
                        }
                    },
                    {
                        "data": "Actived",
                        "orderable": false,
                        "className": "text-center",
                        "render": function (data, type, row) {
                            if (type === "display" || type === "filter") {
                                if (data == true) {
                                    return "<i class='fa fa-check true-icon'></i>";
                                }
                                else {
                                    return "<i class='fa fa-close false-icon'></i>";
                                }
                            }
                            return data;
                        }
                    },
                    {
                        "data": "ProductWarrantyId",
                        "orderable": false,
                        "className": "text-center",
                        "render": function (data, type, row) {
                            if (type === "display" || type === "filter") {
                                if ("@isHasPermissionDelete" == "True" || "@isHasPermissionDelete" == "true") {
                                    return "<a class=\"btn btn-danger btn-delete\" data-current-url=\"Maintenance/ProductWarranty\" data-id='" + data + "' data-item-name='" + row["ProductWarrantyCode"] + "' onclick=\"$(this).button('loading')\"><i class='fa fa-trash-o'></i> Xóa</a>";
                                }
                            }
                            return "";
                        }
                    }
                ],
                destroy: true,
                language: {
                    sProcessing: "Đang xử lý...",
                    sLengthMenu: "Xem _MENU_ mục",
                    sZeroRecords: "Không tìm thấy dòng nào phù hợp",
                    sInfo: "Đang xem _START_ đến _END_ trong tổng số _TOTAL_ mục",
                    sInfoEmpty: "Đang xem 0 đến 0 trong tổng số 0 mục",
                    sInfoFiltered: "(được lọc từ _MAX_ mục)",
                    sInfoPostFix: "",
                    sSearch: "Tìm nội dung:",
                    sUrl: "",
                    oPaginate: {
                        sFirst: "Đầu",
                        sPrevious: "&laquo;",
                        sNext: "&raquo;",
                        sLast: "Cuối"
                    }
                },
                columnDefs: [
                    { targets: [0, 1], visible: true },
                    { targets: 'no-sort', visible: false }
                ],
                "sDom": '<"top"flp>rt<"bottom"ip><"clear">',
            });
        }

        $(document).on("click", ".btn-profile-choose", function () {
            //get and fill data to student info
            var id = $(this).data("id");
            var name = $(this).data("name");

            $("#ProfileId").val(id);
            $("#ProfileName").val(name);

            //close popup
            $("#divProfileSearch").modal("hide");
        });
    </script>
    <script>
        //Get data of form search name function is required
        function GetDataFormSearch() {
            //Get value in search form
            var formdata = $("#frmSearch").serializeArray();
            var data = {};
            $(formdata).each(function (index, obj) {
                data[obj.name] = obj.value;
            });
            return JSON.stringify(data);
        }
        //Fill data to form search name function is required
        /*function FillToInput(recentSearch) {
            $("#Actived").val(recentSearch.Actived).change();
            $("#Age").val(recentSearch.Age).change();
            $("#CompanyId").val(recentSearch.CompanyId).change();

            $("#Address").val(recentSearch.Address);
            $("#OrderDelivery").val(recentSearch.OrderDelivery);
            $("#Phone").val(recentSearch.Phone);
            $("#ProductWarrantyNo").val(recentSearch.ProductWarrantyNo);
            $("#ProfileName").val(recentSearch.ProfileName);
            $("#SaleOrder").val(recentSearch.SaleOrder);
            $("#SerriNo").val(recentSearch.SerriNo);

            $("#FromDate_From").val(recentSearch.FromDate_From);
            $("#FromDate_To").val(recentSearch.FromDate_To);
            $("#ToDate_From").val(recentSearch.ToDate_From);
            $("#ToDate_To").val(recentSearch.ToDate_To);
        }*/
    </script>
}
