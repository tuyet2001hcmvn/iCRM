@model ProfileSearchViewModel

<div id="divProfileSearch-warranty" class="modal fade profileSearch" role="dialog">
    <div class="modal-dialog modal-dialog-md">
        <div class="modal-content">
            <div class="modal-header bg-primary">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" id="btn-cancel-delete"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">TÌM KIẾM THÔNG TIN KHÁCH HÀNG</h4>
            </div>
            <form id="frmProfileSearchPopup">
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    <div class="modal-body">

                        <div class="content">
                            <div class="form-horizontal">
                                <div class="panel-group">
                                    <div class="panel panel-default panel-search">
                                        <div class="panel-body">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="form-group">
                                                        <div class="col-md-2">
                                                            @Html.TooltipLabelFor(p => p.ProfileCode)
                                                        </div>
                                                        <div class="col-md-4">
                                                            @Html.TextBoxFor(p => p.ProfileCode, new { @class = "form-control text-box single-line" })
                                                        </div>

                                                        <div class="col-md-2">
                                                            @Html.TooltipLabelFor(p => p.ProfileForeignCode)
                                                        </div>
                                                        <div class="col-md-4">
                                                            @Html.TextBoxFor(p => p.ProfileForeignCode, new { @class = "form-control text-box single-line" })
                                                        </div>
                                                    </div>

                                                    <div class="form-group">
                                                        <div class="col-md-2">
                                                            @Html.TooltipLabelFor(p => p.ProfileName)
                                                        </div>
                                                        <div class="col-md-4">
                                                            @Html.TextBoxFor(p => p.ProfileName, new { @class = "form-control text-box single-line" })
                                                        </div>

                                                        <div class="col-md-2">
                                                            @Html.TooltipLabelFor(p => p.Phone)
                                                        </div>
                                                        <div class="col-md-4">
                                                            @Html.TextBoxFor(p => p.Phone, new { @class = "form-control text-box single-line" })
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <div class="col-md-2">
                                                            @Html.TooltipLabelFor(p => p.CustomerTypeCode)
                                                        </div>
                                                        <div class="col-md-4">
                                                            @Html.DropDownList("CustomerTypeCode", null, LanguageResource.Dropdownlist_All, new { @class = "form-control with-search" })
                                                        </div>

                                                        <div class="col-md-2">
                                                            @Html.TooltipLabelFor(p => p.Actived)
                                                        </div>
                                                        <div class="col-md-4">
                                                            @Html.DropDownList("Actived", new List<SelectListItem>()
                                                               {
                                                                   new SelectListItem(){Text = LanguageResource.Dropdownlist_All, Value = ""},
                                                                   new SelectListItem(){Text = LanguageResource.Actived_True, Value = "true"},
                                                                   new SelectListItem(){Text = LanguageResource.Actived_False, Value = "false"}
                                                               }, new { @class = "font-control" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <div class="col-md-8 col-md-offset-5">
                                                        <a class="btn btn-primary btn-search" id="btn-profile-search">
                                                            <i class="fa fa-search"></i> @LanguageResource.Btn_Search
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="panel panel-default">
                                        <div class="panel-body">
                                            <div id="divSearchPopupResult">
                                                <table class="table table-bordered table-striped table-hover searchTable no-footer">
                                                    <thead class="isd-table-header">
                                                        <tr>
                                                            <th class="text-center isd-table-th-stt">@LanguageResource.NumberIndex</th>
                                                            <th>@Html.DisplayNameFor(p => p.ProfileCode)</th>
                                                            <th>@Html.DisplayNameFor(p => p.ProfileForeignCode)</th>
                                                            <th>@Html.DisplayNameFor(p => p.ProfileName)</th>
                                                            <th>@Html.DisplayNameFor(p => p.CustomerTypeCode)</th>
                                                            <th>@Html.DisplayNameFor(p => p.Phone)</th>
                                                            <th>@Html.DisplayNameFor(p => p.Email)</th>
                                                            <th>@Html.DisplayNameFor(p => p.Address)</th>
                                                            <th>@Html.DisplayNameFor(p => p.CreateUser)</th>
                                                            <th class="text-center">@Html.DisplayNameFor(p => p.CreateTime)</th>
                                                            <th class="text-center">@Html.DisplayNameFor(p => p.Actived)</th>
                                                            <th class="text-center isd-table-th-action">@LanguageResource.Actions</th>
                                                        </tr>
                                                    </thead>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        //$("#btn-profile-search").trigger("click");
    });

    $(document).on("click", "#divProfileSearch-warranty #btn-profile-search", function () {
        var $btn = $(this);
        $btn.button('loading');

        PaggingServerSide_Profile("/Customer/Profile/_ProfileSearchResult");
    });

    //trigger enter click when fill in search form
    $(document).on("keyup", "#divProfileSearch-warranty #frmProfileSearchPopup", function (evt) {
        if (evt.keyCode == 13) {
            $("#divProfileSearch-warranty #btn-profile-search").trigger("click");
        }
    });

    function PaggingServerSide_Profile(url) {
        $("#divProfileSearch-warranty .searchTable").DataTable().clear().destroy();
        $("#divProfileSearch-warranty .searchTable")
            .on('processing.dt', function (e, settings, processing) {
                ISD.LoadingDataTable(processing, '#divProfileSearch-warranty .searchTable');
            })
            .DataTable({
            proccessing: true,
            serverSide: true,
            paging: true,
            scrollX: true,
            //scrollCollapse: true,
            //fixedColumns: {
            //    leftColumns: 3
            //},
            ajax: {
                type: 'POST',
                url: url,
                contentType: 'application/json',
                data: function (d) {
                    var arr = {};
                    //data search
                    var data = $("#divProfileSearch-warranty #frmProfileSearchPopup").serializeArray();
                    $.each(data, function (index, val) {
                        var obj = {};
                        obj[val.name] = val.value;
                        $.extend(true, arr, obj);
                    });
                    //data datatable (draw, start, length,...)
                    $.extend(true, arr, d);

                    return JSON.stringify(arr);
                }
            },
            columns: [
                {
                    "data": "STT",
                    "className": "text-center"
                },
                {
                    "data": "ProfileCode",
                    "className": "text-center",
                    "orderable": true,
                },
                {
                    "data": "ProfileForeignCode",
                    "className": "text-center",
                    "orderable": true,
                },
                {
                    "data": "ProfileName",
                    "orderable": true,
                    "render": function (data, type, row) {
                        if (type === "display" || type === "filter") {
                            return "<a class='btn-profile-choose' data-id='" + row["ProfileId"] + "' data-name='" + data + "'>" + data + "</a>"
                        }
                        return data;
                    }
                },
                {
                    "data": "CustomerTypeName", "orderable": true
                },
                {
                    "data": "Phone", "className": "text-right", "orderable": false
                },
                {
                    "data": "Email", "orderable": false
                },
                {
                    "data": "Address", "orderable": false
                },
                {
                    "data": "CreateUser"
                },
                {
                    "data": "CreateTime",
                    "orderable": true,
                    "className": "text-center",
                    "render": function (data, type, row) {
                        // If display or filter data is requested, format the date
                        if (type === "display" || type === "filter") {
                            return moment(data).format("DD/MM/YYYY HH:mm:ss");
                        }
                        return data;
                    }
                },
                {
                    "data": "Actived",
                    "orderable": false,
                    "className": "text-center",
                    "render": function (data, type, row) {
                        if (type === "display" || type === "filter") {
                            if (data == true) {
                                return "<i class='fa fa-check true-icon'></i>";
                            }
                            else {
                                return "<i class='fa fa-close false-icon'></i>";
                            }
                        }
                        return data;
                    }
                },
                {
                    "data": "ProfileId",
                    "orderable": false,
                    "className": "text-center",
                    "render": function (data, type, row) {
                        if (type === "display" || type === "filter") {
                            return "<a class=\"btn btn-success btn-profile-choose\" data-id='" + data + "' data-name='" + row["ProfileName"] + "'>@LanguageResource.Btn_Choose</a>";
                        }
                        return "";
                    }
                }
            ],
            destroy: true,
            language: {
                sProcessing: "Đang xử lý...",
                sLengthMenu: "Xem _MENU_ mục",
                sZeroRecords: "Không tìm thấy dòng nào phù hợp",
                sInfo: "Đang xem _START_ đến _END_ trong tổng số _TOTAL_ mục",
                sInfoEmpty: "Đang xem 0 đến 0 trong tổng số 0 mục",
                sInfoFiltered: "(được lọc từ _MAX_ mục)",
                sInfoPostFix: "",
                sSearch: "Tìm nội dung:",
                sUrl: "",
                oPaginate: {
                    sFirst: "Đầu",
                    sPrevious: "&laquo;",
                    sNext: "&raquo;",
                    sLast: "Cuối"
                }
            },
            columnDefs: [
                { targets: [0, 1], visible: true },
                { targets: 'no-sort', visible: false }
            ],
            "sDom": '<"top"flp>rt<"bottom"i><"clear">',
        });
    }

    //$(document).on("click", ".btn-profile-choose", function () {
    //    //get and fill data to student info
    //    var id = $(this).data("id");
    //    var name = $(this).data("name");

    //    $("#ProfileId").val(id);
    //    $("#ProfileName").val(name);

    //    //close popup
    //    $("#divProfileSearch").modal("hide");
    //});

</script>