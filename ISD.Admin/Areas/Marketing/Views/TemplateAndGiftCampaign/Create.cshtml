@model TemplateAndGiftCampignCreateModel
@{
    ViewBag.Title = LanguageResource.Create + " " + LanguageResource.TemplateAndGiftCampaign.ToLower();
    string CurrentController = ConstController.TemplateAndGiftCampaign;
    string CurrentArea = ConstArea.Marketing;

    string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController);
}
<div class="content-header clearfix">
    <h1 class="pull-left">
        @HtmlExtensions.BackButton(CurrentArea, CurrentController)
    </h1>
</div>
<div class="content">
    <div class="form-horizontal">
        <div class="box panel-group">
            <div class="box-header with-border">
                <h3 class="box-title">@ViewBag.Title</h3>
                <div class="pull-right">
                    @HtmlExtensions.SaveButton("btn-save", LanguageResource.Btn_Save)
                    @HtmlExtensions.SaveButton("btn-save-edit", LanguageResource.Btn_SaveAndEdit)
                </div>
            </div>
            <div class="panel-body">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { @enctype = "multipart/form-data", @id = "frmCreate" }))
                {
                    //@Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    @*@Html.HiddenFor(p => p.ContentId)
                        @Html.HiddenFor(p => p.TargetGroupId)*@
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.TooltipLabelFor(p=>p.TemplateAndGiftCampaignName)
                        </div>
                        <div class="col-md-8">
                            @Html.RequiredTextboxFor(p => p.TemplateAndGiftCampaignName)
                        </div>
                    </div>
                   
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.TooltipLabelFor(p => p.TemplateAndGiftTargetGroupName)
                        </div>
                        <div class="col-md-8">
                            @Html.RequiredDropDownListFor(p => p.TemplateAndGiftTargetGroupId, Enumerable.Empty<SelectListItem>(), LanguageResource.Dropdownlist_Choose, new { @class = "with-search" })
                            @*<select class="with-search" id="TargetGroupId" name="TargetGroupId">
                            </select>*@
                        </div>
                    </div>
                   
                }
            </div>
        </div>
    </div>
</div>
@section scripts {
    <script src="~/Areas/Marketing/Scripts/ISDNET5Common.js"></script>
    <script>
        var currentUser = "@CurrentUser.AccountId";
        $(document).ready(function () {
            //ISDNET5.LoadContent();
            //ISDNET5.LoadTargetGroup();
            //ISDNET5.LoadSaleOrg();
            //ISDNET5.LoadCampaignStatus();
            //$("#ContentName").change(function () {
            //    var contentName = $('#ContentName').val()
            //    var contentId = $('#contents option').filter(function () {
            //        return this.value == contentName;
            //    }).data('id');
            //    $("#ContentId").val(contentId);
            //})
            //$("#TargetGroupName").change(function () {
            //    var targetGroupName = $('#TargetGroupName').val()
            //    var targetGroupId = $('#targetGroups option').filter(function () {
            //        return this.value == targetGroupName;
            //    }).data('id');
            //    $("#TargetGroupId").val(targetGroupId);
            //})
            //$("#IsImmediately").change(function () {
            //    var isImmediately = ('true' === $('#IsImmediately').val());
            //    if (isImmediately) {
            //        //  $("#IsImmediately").val(false);
            //        $("#divStart").show();
            //        $("input[name=IsImmediately]").val(false);
            //        $('#ScheduledToStart').prop('disabled', false);
            //    }
            //    else {
            //        $("#divStart").hide();
            //        $("input[name=IsImmediately]").val(true);
            //        $('#ScheduledToStart').prop('disabled', true);
            //    }
            //})
            ISDNET5.CreateInitial("@CurrentUrl");
            LoadTargetGroup();
            //ISDNET5.InitCkeditorForEmailContent();
        });
        function LoadTargetGroup() {
            $.ajax({
                url: net5apidomain + "api/Marketing/TemplateAndGiftTargetGroups",
                type: 'GET',
                dataType: 'json',
                success: function (res) {
                    if (res.isSuccess == true) {
                        $.each(res.data, function (i, item) {
                           
                            $('#TemplateAndGiftTargetGroupId').append(new Option(item.targetGroupName, item.id));
                        });
                    }
                   
                }

            });
        }
    </script>
}