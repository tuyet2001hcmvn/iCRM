@model PromotionViewModel

@{
    ViewBag.Title = LanguageResource.Create + " " + LanguageResource.MasterData_CustomerPromotion.ToLower();
    string CurrentController = ConstController.CustomerPromotion;
    string CurrentArea = ConstArea.MasterData;

    string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController);
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { @enctype = "multipart/form-data", @id = "frmCreate" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <input type="hidden" name="isContinue" id="isContinue" value="@ViewBag.isContinue" />
    <input type="hidden" name="Data" id="Data" value="@ViewBag.Data" />

    <div class="content-header clearfix">
        <h1 class="pull-left">
            @ViewBag.Title
            @HtmlExtensions.BackButton(CurrentArea, CurrentController)
        </h1>
        <div class="pull-right">
            @HtmlExtensions.SaveButton("btn-save", LanguageResource.Btn_Save)
            @HtmlExtensions.SaveButton("btn-save-continue", LanguageResource.Btn_SaveAndContinue)
        </div>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-body">

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.PromotionCode)
                            </div>
                            <div class="col-md-9">
                                @Html.RequiredTextboxFor(p => p.PromotionCode)
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.PromotionName)
                            </div>
                            <div class="col-md-9">
                                @Html.RequiredTextboxFor(p => p.PromotionName)
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.EffectFromDate)
                            </div>
                            <div class="col-md-9">
                                @Html.RequiredTextboxFor(p => p.EffectFromDate, new { type = "date" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.EffectToDate)
                            </div>
                            <div class="col-md-9">
                                @Html.RequiredTextboxFor(p => p.EffectToDate, new { type = "date" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.ImageUrl)
                            </div>
                            <div class="col-md-9">
                                @Html.RequiredTextboxFor(p => p.ImageUrl, new { type = "file" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.Description)
                            </div>
                            <div class="col-md-9">
                                @Html.TextAreaFor(p => p.Description, new { @class = "ckeditor", @id = "Description" })
                                <script type="text/javascript">
                                    CKEDITOR.replace("Description", {
                                        height: 250,
                                        width: 800
                                    });
                                    CKEDITOR.instances['Description'].on('change',
                                        function () { CKEDITOR.instances['Description'].updateElement() });
                                </script>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.Notes)
                            </div>
                            <div class="col-md-9">
                                @Html.RequiredTextboxFor(p => p.Notes)
                            </div>
                        </div>

                        <div>
                            <!--mode 1: Create-->
                            @*@Html.Action("_ProductPromotion", new { mode = 1 })*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script>
       //set event btn-save, btn-save-continue for btn-create
        $(document).ready(function () {
            ISD.CreateInitial("@CurrentUrl");
        });

        //btn-del-product: delete row in product promotion table
        $(document).on("click", ".btn-del-product", function () {
            var id = $(this).data("id");
            $.ajax({
                type: "POST",
                url: "/MasterData/CustomerPromotion/DeleteProduct?STT=" + id,
                data: $("#frmCreate").serialize(),
                success: function (data) {
                    $("#productList").html(data);
                }
            });
        });

        //btn-add-row: insert new row product
        $(document).on("click", ".btn-add-row", function () {
            var ProductId = $("#ProductId").val();

            if (ProductId == "") {
                alertPopup(false, '@LanguageResource.Promotion_AlertProductId');
            }
            else {
                var frm = $("#frmCreate");
                if (frm.valid()) {
                    $.ajax({
                        url: "/MasterData/CustomerPromotion/InsertProduct",
                        data: frm.serialize(),
                        type: 'POST',
                        success: function (htmlData) {
                            $("#productList").html(htmlData);
                            $('#frmCreate select').val($('#frmCreate select option:first-child').val()).trigger("change");
                        },
                        error: function (xhr, status, error) {
                            alertPopup(false, xhr.responseText);
                        }
                    });
                }
                else {
                    //show error invalid
                    var validator = frm.validate();
                    $.each(validator.errorMap, function (index, value) {
                        console.log('Id: ' + index + ' Message: ' + value);
                    });
                }
            }
            return false;
        });
    </script>
}


