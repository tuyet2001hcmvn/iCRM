@model IEnumerable<RolesModel>
@{
    string CurrentController = ConstController.Roles;
    string CurrentArea = ConstArea.Permission;
}
<table class="table table-bordered table-striped table-hover dataTable no-footer">
    <thead class="isd-table-header">
        <tr>
            <th class="text-center">@LanguageResource.NumberIndex</th>
            <th>@Html.DisplayNameFor(p => p.RolesCode)</th>
            <th>@Html.DisplayNameFor(p => p.RolesName)</th>
            <th>@Html.DisplayNameFor(p => p.isEmployeeGroup)</th>
            <th class="text-center">@Html.DisplayNameFor(p => p.OrderIndex)</th>
            <th class="text-center">@Html.DisplayNameFor(p => p.Actived)</th>
            <th class="text-center">@LanguageResource.Actions</th>
        </tr>
    </thead>
    <tbody>
        @{ int i = 0; }
        @foreach (var item in Model)
        {
            i++;
        <tr>
            <td class="text-center">@i</td>
            <td>@Html.DisplayFor(p => item.RolesCode)</td>
            <td>@Html.DisplayFor(p => item.RolesName)</td>
            <td>
                @if (item.isEmployeeGroup == true)
                {
                    <span>
                        @LanguageResource.DepartmentId
                    </span>
                }
                else
                {
                    <span>
                        @LanguageResource.Actions
                    </span>
                }
            </td>
            <td class="text-center">@Html.DisplayFor(p => item.OrderIndex)</td>
            <td class="text-center">@HtmlExtensions.ActivedIcon(item.Actived)</td>
            <td class="text-center">
                @HtmlExtensions.EditButton(CurrentArea, CurrentController, item.RolesId)
                @HtmlExtensions.DeleteButton(CurrentArea, CurrentController, item.RolesName, item.RolesId)
            </td>
        </tr>
        }
    </tbody>
    <tfoot></tfoot>
</table>


