@using Newtonsoft.Json;
@model IEnumerable<CostOfUsingCatalogueComparedToApprovalViewModel>
@{
    var pivotSetting = (List<FieldSettingModel>)ViewBag.PivotSetting;
    var search = (CostOfUsingCatalogueComparedToApprovalSearchViewModel)ViewBag.Search;
    var layoutConfigs = (string)ViewBag.LayoutConfigs;
}

@Html.DevExpress().PivotGrid(settings =>
{
    settings.Name = "CustomerCertificateACPivotGrid";
    settings.CallbackRouteValues = new { Controller = "CostOfUsingCatalogueComparedToApprovalReport", Action = "CostOfUsingCatalogueComparedToApprovalGridPartial", jsonReq = JsonConvert.SerializeObject(search) };
    settings.Width = Unit.Percentage(100);
    settings.OptionsPager.RowsPerPage = 20;
    settings.OptionsPager.PageSizeItemSettings.Visible = true;
    settings.OptionsCustomization.AllowDrag = true;
    settings.OptionsCustomization.AllowDragInCustomizationForm = true;
    settings.CustomizationFieldsLeft = 600;
    settings.CustomizationFieldsTop = 400;
    settings.OptionsCustomization.AllowSort = true;
    settings.OptionsView.ShowColumnGrandTotals = false;
    settings.OptionsView.ShowColumnGrandTotalHeader = false;

    settings.Groups.Add("Được duyệt");
    settings.Groups.Add("Đã xuất");
    settings.Groups.Add("Chênh lệch");

    if (string.IsNullOrEmpty(layoutConfigs))
    {
        settings.AfterPerformCallback = (sender, e) =>
        {
            List<FieldSettingModel> fieldSettingList = new List<FieldSettingModel>();
            ASPxPivotGrid PivotGrid = sender as ASPxPivotGrid;
            var listField = PivotGrid.Fields;
            foreach (PivotGridField field in listField)
            {
                FieldSettingModel fieldSetting = new FieldSettingModel();
                fieldSetting.Caption = field.Caption;
                fieldSetting.AreaIndex = field.AreaIndex;
                fieldSetting.FieldName = field.FieldName;
                if (field.Area == PivotArea.RowArea)
                {
                    fieldSetting.PivotArea = 0;

                }
                else
                {
                    if (field.Area == PivotArea.ColumnArea)
                    {
                        fieldSetting.PivotArea = 1;
                    }
                    else
                    {
                        if (field.Area == PivotArea.FilterArea)
                        {
                            fieldSetting.PivotArea = 2;
                        }
                        else
                        {
                            fieldSetting.PivotArea = 3;
                        }
                    }
                }
                if (field.ValueFormat.FormatType == FormatType.Numeric || field.ValueFormat.FormatType == FormatType.DateTime)
                {
                    fieldSetting.CellFormat_FormatString = field.ValueFormat.FormatString;
                    fieldSetting.CellFormat_FormatType = field.ValueFormat.FormatType.ToString();
                }
                fieldSetting.Visible = field.Visible;
                fieldSettingList.Add(fieldSetting);
            }
            Session[CurrentUser.AccountId + "Layout"] = fieldSettingList;
            Session[CurrentUser.AccountId + "LayoutConfigs"] = PivotGrid.SaveLayoutToString();
        };
    }
    else
    {
        settings.PreRender = (sender, e) =>
        {
            MVCxPivotGrid PivotGrid = sender as MVCxPivotGrid;
            //PivotGrid.LoadLayoutFromString(layoutConfigs);
            Session[CurrentUser.AccountId + "LayoutConfigs"] = PivotGrid.SaveLayoutToString();
        };
    }

    if (pivotSetting != null && pivotSetting.Count > 0)
    {
        foreach (var fieldSetting in pivotSetting)
        {
            settings.Fields.Add(field =>
            {
                if (fieldSetting.PivotArea == 0)
                {
                    field.Area = PivotArea.RowArea;
                }
                if (fieldSetting.PivotArea == 1)
                {
                    field.Area = PivotArea.ColumnArea;
                }
                if (fieldSetting.PivotArea == 2)
                {
                    if (fieldSetting.AreaIndex > 10)
                    {
                        field.Visible = false;
                    }
                    field.Area = PivotArea.FilterArea;

                }
                if (fieldSetting.PivotArea == 3)
                {
                    field.Area = PivotArea.DataArea;
                }
                field.FieldName = fieldSetting.FieldName;
                field.Caption = fieldSetting.Caption;
                field.AreaIndex = fieldSetting.AreaIndex.Value;
                if (fieldSetting.CellFormat_FormatType == "DateTime")
                {
                    field.ValueFormat.FormatType = FormatType.DateTime;
                    field.ValueFormat.FormatString = fieldSetting.CellFormat_FormatString;
                    field.CellFormat.FormatType = FormatType.DateTime;
                    field.CellFormat.FormatString = fieldSetting.CellFormat_FormatString;
                }
                if (fieldSetting.CellFormat_FormatType == "Numeric")
                {
                    field.ValueFormat.FormatType = FormatType.Numeric;
                    field.ValueFormat.FormatString = fieldSetting.CellFormat_FormatString;
                    field.CellFormat.FormatType = FormatType.Numeric;
                    field.CellFormat.FormatString = fieldSetting.CellFormat_FormatString;
                    field.ValueStyle.HorizontalAlign = HorizontalAlign.Right;
                    field.CellStyle.HorizontalAlign = HorizontalAlign.Right;
                }
                field.Visible = fieldSetting.Visible.Value;
            });
        }
    }
    else // default
    {
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "SaleOfficeName";
            field.Caption = "Chi nhánh";
            field.AreaIndex = 0;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "ProductGroups";
            field.Caption = "Nhóm Catalogue";
            field.AreaIndex = 1;
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "OfferQuantity";
            field.Caption = "Số lượng (Đề xuất)";
            field.AreaIndex = 2;
            field.CellFormat.FormatType = FormatType.Numeric;
            field.CellFormat.FormatString = "{0:n0}";
            field.ValueFormat.FormatType = FormatType.Numeric;
            field.ValueFormat.FormatString = "{0:n0}";
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "OfferSampleValueMin";
            field.Caption = "Mẫu";
            field.AreaIndex = 3;
            field.CellFormat.FormatType = FormatType.Numeric;
            field.CellFormat.FormatString = "{0:n0}";
            field.ValueFormat.FormatType = FormatType.Numeric;
            field.ValueFormat.FormatString = "{0:n0}";
        });
        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "OfferProcessingValueMin";
            field.Caption = "Gia công";
            field.AreaIndex = 4;
            field.CellFormat.FormatType = FormatType.Numeric;
            field.CellFormat.FormatString = "{0:n0}";
            field.ValueFormat.FormatType = FormatType.Numeric;
            field.ValueFormat.FormatString = "{0:n0}";
        });

        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "OfferUnitPriceMin";
            field.Caption = "Đơn giá";
            field.AreaIndex = 5;
            field.CellFormat.FormatType = FormatType.Numeric;
            field.CellFormat.FormatString = "{0:n0}";
            field.ValueFormat.FormatType = FormatType.Numeric;
            field.ValueFormat.FormatString = "{0:n0}";
        });

        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.RowArea;
            field.FieldName = "OfferPrice";
            field.Caption = "Thành tiền";
            field.AreaIndex = 6;
            field.CellFormat.FormatType = FormatType.Numeric;
            field.CellFormat.FormatString = "{0:n0}";
            field.ValueFormat.FormatType = FormatType.Numeric;
            field.ValueFormat.FormatString = "{0:n0}";
        });

        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.DataArea;
            field.FieldName = "RequestQuantity";
            field.Caption = "Số lượng (Được duyệt)";
            field.AreaIndex = 7;
            field.CellFormat.FormatType = FormatType.Numeric;
            field.CellFormat.FormatString = "{0:n0}";
            field.ValueFormat.FormatType = FormatType.Numeric;
            field.ValueFormat.FormatString = "{0:n0}";
        });

        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.DataArea;
            field.FieldName = "RequestPrice";
            field.Caption = "Thành tiền (Được duyệt)";
            field.AreaIndex = 8;
            field.CellFormat.FormatType = FormatType.Numeric;
            field.CellFormat.FormatString = "{0:n0}";
            field.ValueFormat.FormatType = FormatType.Numeric;
            field.ValueFormat.FormatString = "{0:n0}";
        });

        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.DataArea;
            field.FieldName = "TransferredQuantity";
            field.Caption = "Số lượng (Đã xuất)";
            field.AreaIndex = 9;
            field.CellFormat.FormatType = FormatType.Numeric;
            field.CellFormat.FormatString = "{0:n0}";
            field.ValueFormat.FormatType = FormatType.Numeric;
            field.ValueFormat.FormatString = "{0:n0}";
        });

        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.DataArea;
            field.FieldName = "TransferredPrice";
            field.Caption = "Thành tiền (Đã xuất)";
            field.AreaIndex = 10;
            field.CellFormat.FormatType = FormatType.Numeric;
            field.CellFormat.FormatString = "{0:n0}";
            field.ValueFormat.FormatType = FormatType.Numeric;
            field.ValueFormat.FormatString = "{0:n0}";
        });

        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.DataArea;
            field.FieldName = "DifferenceQuantity";
            field.Caption = "Số lượng (Chênh lệch)";
            field.AreaIndex = 11;
            field.CellFormat.FormatType = FormatType.Numeric;
            field.CellFormat.FormatString = "{0:n0}";
            field.ValueFormat.FormatType = FormatType.Numeric;
            field.ValueFormat.FormatString = "{0:n0}";
        });

        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.DataArea;
            field.FieldName = "DifferencePrice";
            field.Caption = "Thành tiền (Chênh lệch)";
            field.AreaIndex = 12;
            field.CellFormat.FormatType = FormatType.Numeric;
            field.CellFormat.FormatString = "{0:n0}";
            field.ValueFormat.FormatType = FormatType.Numeric;
            field.ValueFormat.FormatString = "{0:n0}";
        });

        settings.Fields.Add(field =>
        {
            field.Area = PivotArea.ColumnArea;
            field.Caption = "Loại";
            field.AreaIndex = 13;
        });
    }

}).Bind(Model).GetHtml()
