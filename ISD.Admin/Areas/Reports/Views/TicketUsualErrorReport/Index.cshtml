@model TaskSearchViewModel
@using ISD.Core
@{
    Layout = "~/Views/Shared/_Layout_Report.cshtml";
    ViewBag.Title = LanguageResource.Reports_TicketUsualErrorReport;
    string CurrentArea = ConstArea.Reports;
    string CurrentController = ConstController.TicketUsualErrorReport;

    string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController);
    var productColorLst = (List<ISDSelectItem2>)ViewBag.ProductColorList;
    var listSystemTemplate = (List<PivotTemplateViewModel>)ViewBag.SystemTemplate;
    var listUserTemplate = (List<PivotTemplateViewModel>)ViewBag.UserTemplate;
    var templateId = ViewBag.TemplateId;
    var modeSearch = ViewBag.ModeSearch;
    ViewBag.CurrentUrl = CurrentUrl;
}

<div class="content-header clearfix">
    <h1 class="pull-left">
        @ViewBag.Title
    </h1>
    <div class="pull-right">
        @Html.Partial("~/Areas/Reports/Views/_PivotTemplateHandle.cshtml")
        <div class="btn-group">
            <a class="btn btn-success dropdown-toggle"><i class="fa fa-download"></i> Export</a>
            <a class="btn btn-success dropdown-toggle" data-toggle="dropdown"><span class="caret"></span><span class="sr-only">&nbsp;</span></a>
            <ul class="dropdown-menu" role="menu">
                <li><a id="btn-export" class="btn-export" href="#"><i class="fa fa-file-excel-o"></i> Export Excel</a></li>
                <li><a id="btn-export-pivot" class="btn-export" href="#"><i class="fa fa-file-excel-o"></i> Export Pivot Excel</a></li>
            </ul>
            <a class="btn btn-info" id="btn-export-pdf"><i class="fa fa-print"></i> In báo cáo</a>
        </div>
    </div>
</div>
@Html.Hidden("TemplateId", null, new { value = templateId })
<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                <div class="row" style="padding-top:10px;">
                    <div class="col-sm-12">
                        <div class="box box-default box-solid">
                            <div class="box-header with-border">
                                <div class="box-tools pull-right">
                                    <button class="btn btn-box-tool" type="button" data-widget="collapse"><i class="fa fa-minus"></i></button>
                                </div>
                            </div>
                            <div class="box-body ">
                                <div class="row">

                                    <div class="panel-body">
                                        @using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "frmSearch", @class = "isd-form-search" }))
                                        {
                                            <div class="panel-body">
                                                <div class="row">
                                                    <div class="col-md-5">
                                                        <div class="form-group">
                                                            <div class="col-md-4">
                                                                @Html.TooltipLabelFor(p => p.ProductCategoryCode)
                                                            </div>
                                                            <div class="col-md-8 multi">
                                                                @Html.DropDownListFor(p => p.ProductCategoryCode, null, null, new { @class = "form-control with-search", @multiple = "multiple" })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-5">
                                                        <div class="form-group">
                                                            <div class="col-md-4">
                                                                @Html.TooltipLabelFor(p => p.UsualErrorCode)
                                                            </div>
                                                            <div class="col-md-8 multi">
                                                                @Html.DropDownListFor(p => p.UsualErrorCode, null, null, new { @class = "form-control with-search", @multiple = "multiple" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    @*<div class="col-md-5">
                                                            <div class="form-group">
                                                                <div class="col-md-4">
                                                                    @Html.TooltipLabelFor(p => p.ProductColorCode)
                                                                </div>
                                                                <div class="col-md-8 multi">
                                                                    @Html.DropDownListFor(p => p.ProductColorCode, null, null, new { @class = "form-control with-search", @multiple = "multiple" })
                                                                </div>
                                                            </div>
                                                        </div>*@
                                                    <div class="col-md-5">
                                                        <div class="form-group">
                                                            <div class="col-md-4">
                                                                @Html.TooltipLabelFor(p => p.ProductColorCode)
                                                            </div>
                                                            <div class="col-md-8 multi">
                                                                <select id="ProductColorCode" name="ProductColorCode" class="form-control ProductColorCode" multiple>
                                                                    @if (productColorLst != null && productColorLst.Count > 0)
                                                                    {
                                                                        foreach (var item in productColorLst)
                                                                        {
                                                                            <option value="@item.value">@item.text</option>
                                                                        }
                                                                    }
                                                                </select>
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <div class="col-md-5">
                                                        <div class="form-group">
                                                            <div class="col-md-4">
                                                                @Html.TooltipLabelFor(p => p.ProductLevelCode)
                                                            </div>
                                                            <div class="col-md-8 multi">
                                                                @Html.DropDownListFor(p => p.ProductLevelCode, null, null, new { @class = "form-control with-search", @multiple = "multiple" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-md-5">
                                                        <div class="form-group">
                                                            <div class="col-md-4">
                                                                @Html.TooltipLabelFor(p => p.CommonDate)
                                                            </div>
                                                            <div class="col-md-8">
                                                                @Html.DropDownListFor(p => p.CommonDate, null, new { @class = "form-control with-search" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-5">
                                                        <div class="form-group">
                                                            <div class="col-md-4">
                                                                @Html.TooltipLabelFor(p => p.FromDate)
                                                            </div>
                                                            <div class="col-md-8">
                                                                @if (Model.CommonDate != "Custom")
                                                                {
                                                                    @Html.TextBoxFor(model => model.FromDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", @readonly = "readonly" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.TextBoxFor(model => model.FromDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-5">
                                                        <div class="form-group">
                                                            <div class="col-md-4">
                                                                @Html.TooltipLabelFor(p => p.ToDate)
                                                            </div>
                                                            <div class="col-md-8">
                                                                @if (Model.CommonDate != "Custom")
                                                                {
                                                                    @Html.TextBoxFor(model => model.ToDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", @readonly = "readonly" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.TextBoxFor(model => model.ToDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="form-group">
                                                        <div class="col-md-3 col-md-offset-4 input-group">
                                                            <select class="form-control" id="SearchTemplateId" name="SearchTemplateId">
                                                                <option value="">@LanguageResource.Dropdownlist_RecentSearch</option>
                                                            </select>
                                                            <span class="input-group-btn" style="padding-right:25px;padding-left: 10px;">
                                                                <a class="btn btn-delete-frmSearch display-none" style="color: coral;" title="Xoá mẫu tìm kiếm"><i class="fa fa-trash-o fa-lg" aria-hidden="true"></i></a>
                                                                <a class="btn btn-save-frmSearch" title="Lưu mẫu tìm kiếm"><i class="fa fa-thumb-tack fa-lg" aria-hidden="true"></i></a>
                                                            </span>
                                                            <a id="btn-view" class="btn btn-primary" style="margin-left: 10px;"><i class="fa fa-refresh"></i> Chạy báo cáo</a>&nbsp;
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default">

                <div class="panel-body" style="overflow-x:scroll;">

                    @Html.Action("TicketUsualErrorPivotGridPartial", new { searchViewModel = ViewBag.Search, templateId = ViewBag.TemplateId })
                </div>
            </div>
        </div>
    </div>
</div>

<div class="delete-confirm"></div>
@section components {
    <div id="popupSaveTemplate" class="modal fade" role="dialog">
        @Html.Partial("~/Areas/Reports/Views/_SaveTemplatePopup.cshtml")
    </div>
}

@section jquery {
    <link href="~/Content/jquery-ui.css" rel="stylesheet" />
    <script src="~/Content/jquery-ui.js"></script>
}
@section scripts {
    <script src="~/Scripts/Common/ISD.SearchTemplate.js"></script>
    <script src="~/Scripts/Common/PivotTemplate.js"></script>
    <script src="~/Scripts/Common/ISD.CacheInputData.js"></script>
    <script>
	//Define it
	var currentUserId = "@CurrentUser.AccountId";
    var currentPageId = "@ViewBag.PageId";

    </script>
    <script>
        $(document).ready(function () {

            var modeTemplateSearch = "@modeSearch";

            if (modeTemplateSearch == "Recently") {
                LoadTemplateSearch(currentUserId, currentPageId, "Recently");
                var recentSearch = JSON.parse(localStorage.getItem('pageId-' + currentPageId));
                console.log(recentSearch);
                if (recentSearch) {
                    FillToInput(recentSearch);
                }
            }
            else {
                LoadTemplateSearch(currentUserId, currentPageId);
                localStorage.removeItem('pageId-' + currentPageId)
            }
            ISDPivotTemplate.Init("@CurrentUrl", "@CurrentController");
            Select2_CustomForList("/Sale/Product/SearchProductColorList", "#ProductColorCode");
        })
        //dùng cho select mã màu sp
        function Select2_CustomForList(url, selector) {
            $(selector).select2({
                ajax: {
                    url: url,
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            search: params.term, // search term
                            page: params.page,
                            type: $(this).data('code'),
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: $.map(data, function (obj) {
                                return { id: obj.value, text: obj.text };
                            })
                        };
                    }
                    , minimumInputLength: 1 // Tối thiếu 2 kí tự thì mới search

                }
            });
        }
        $("#ProductColorCode").each(function () {
            var row = $(this).data("row");
            $('select[name="ProductColorCode"] option').each(function () {
                $(this).prop('selected', true);
            });

            $('select[name="ProductColorCode"]').trigger("change");
        });
        ISDCacheInput.Init(currentPageId);

        $(document).on("click", "#btn-export", function () {
            var $btn = $(this);
            $btn.button("loading")
            var arr = {};
            var data = $("#frmSearch").serializeArray();

            var obj = {};
            $.each(data, function (index, val) {
                obj[val.name] = val.value;
                $.extend(true, arr, obj)
            });
            obj["IsView"] = true;
            $.extend(true, arr, obj);
            obj["pivotTemplate"] = $('#TemplateId').val();
            obj["modeSearch"] = "Recently";
            $.extend(true, arr, obj);

            //Nhóm vật tư
            var ProductCategoryCodeList = $('#ProductCategoryCode').val();
            if (ProductCategoryCodeList != null && ProductCategoryCodeList.length > 0) {
                var productCategoryCode = {};

                productCategoryCode['ProductCategoryCode'] = ProductCategoryCodeList;
                $.extend(true, arr, productCategoryCode);
            }
            //Các lỗi BH thường gặp
            var UsualErrorCodeList = $('#UsualErrorCode').val();
            if (UsualErrorCodeList != null && UsualErrorCodeList.length > 0) {
                var usualErrorCode = {};
                usualErrorCode['UsualErrorCode'] = UsualErrorCodeList;
                $.extend(true, arr, usualErrorCode);
            }
            //Mã màu SP
            var ProductColorCodeList = $('#ProductColorCode').val();
            if (ProductColorCodeList != null && ProductColorCodeList.length > 0) {
                var productColorCode = {};

                productColorCode['ProductColorCode'] = ProductColorCodeList;
                $.extend(true, arr, productColorCode);
            }

            //Phân cấp sản phẩm
            var ProductLevelCodeList = $('#ProductLevelCode').val();
            if (ProductLevelCodeList != null && ProductLevelCodeList.length > 0) {
                var productLevelCode = {};

                productLevelCode['ProductLevelCode'] = ProductLevelCodeList;
                $.extend(true, arr, productLevelCode);
            }
            //Save localStorage
            localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
            ISD.Download("/@CurrentUrl/ExportExcel", arr);

            setTimeout(function () {
                $btn.button('reset');
            }, 3000);

        });

        $(document).on("click", "#btn-export-pivot", function () {
            var $btn = $(this);
            $btn.button("loading")
            var arr = {};
            var data = $("#frmSearch").serializeArray();

            var obj = {};
            $.each(data, function (index, val) {
                obj[val.name] = val.value;
                $.extend(true, arr, obj)
            });
            obj["IsView"] = true;
            $.extend(true, arr, obj);
            obj["pivotTemplate"] = $('#TemplateId').val();
            obj["modeSearch"] = "Recently";
            $.extend(true, arr, obj);

            //Nhóm vật tư
            var ProductCategoryCodeList = $('#ProductCategoryCode').val();
            if (ProductCategoryCodeList != null && ProductCategoryCodeList.length > 0) {
                var productCategoryCode = {};

                productCategoryCode['ProductCategoryCode'] = ProductCategoryCodeList;
                $.extend(true, arr, productCategoryCode);
            }
            //Các lỗi BH thường gặp
            var UsualErrorCodeList = $('#UsualErrorCode').val();
            if (UsualErrorCodeList != null && UsualErrorCodeList.length > 0) {
                var usualErrorCode = {};
                usualErrorCode['UsualErrorCode'] = UsualErrorCodeList;
                $.extend(true, arr, usualErrorCode);
            }
            //Mã màu SP
            var ProductColorCodeList = $('#ProductColorCode').val();
            if (ProductColorCodeList != null && ProductColorCodeList.length > 0) {
                var productColorCode = {};

                productColorCode['ProductColorCode'] = ProductColorCodeList;
                $.extend(true, arr, productColorCode);
            }

            //Phân cấp sản phẩm
            var ProductLevelCodeList = $('#ProductLevelCode').val();
            if (ProductLevelCodeList != null && ProductLevelCodeList.length > 0) {
                var productLevelCode = {};

                productLevelCode['ProductLevelCode'] = ProductLevelCodeList;
                $.extend(true, arr, productLevelCode);
            }
            //Save localStorage
            localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
            ISD.Download("/@CurrentUrl/ExportPivot", arr);
            $btn.button("reset");

        });

        $(document).on("click", "#btn-view", function () {
            var $btn = $(this);
            $btn.button("loading")
            var arr = {};
            var data = $("#frmSearch").serializeArray();

            var obj = {};
            $.each(data, function (index, val) {
                obj[val.name] = val.value;
                $.extend(true, arr, obj)
            });
            obj["IsView"] = true;
            $.extend(true, arr, obj);
            obj["pivotTemplate"] = $('#TemplateId').val();
            obj["modeSearch"] = "Recently";
            $.extend(true, arr, obj);

            //Nhóm vật tư
            var ProductCategoryCodeList = $('#ProductCategoryCode').val();
            if (ProductCategoryCodeList != null && ProductCategoryCodeList.length > 0) {
                var productCategoryCode = {};

                productCategoryCode['ProductCategoryCode'] = ProductCategoryCodeList;
                $.extend(true, arr, productCategoryCode);
            }
            //Các lỗi BH thường gặp
            var UsualErrorCodeList = $('#UsualErrorCode').val();
            if (UsualErrorCodeList != null && UsualErrorCodeList.length > 0) {
                var usualErrorCode = {};
                usualErrorCode['UsualErrorCode'] = UsualErrorCodeList;
                $.extend(true, arr, usualErrorCode);
            }
            //Mã màu SP
            var ProductColorCodeList = $('#ProductColorCode').val();
            if (ProductColorCodeList != null && ProductColorCodeList.length > 0) {
                var productColorCode = {};

                productColorCode['ProductColorCode'] = ProductColorCodeList;
                $.extend(true, arr, productColorCode);
            }

            //Phân cấp sản phẩm
            var ProductLevelCodeList = $('#ProductLevelCode').val();
            if (ProductLevelCodeList != null && ProductLevelCodeList.length > 0) {
                var productLevelCode = {};

                productLevelCode['ProductLevelCode'] = ProductLevelCodeList;
                $.extend(true, arr, productLevelCode);
            }
            //Save localStorage
            localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
            ISD.Download("/@CurrentUrl/ViewDetail", arr);


        });

        $(document).off("click", ".pivot-template-item").on("click", ".pivot-template-item", function () {
            var $btn = $(this);
            $btn.button("loading")
            var arr = {};
            var data = $("#frmSearch").serializeArray();

            var obj = {};
            $.each(data, function (index, val) {
                obj[val.name] = val.value;
                $.extend(true, arr, obj)
            });
            obj["IsView"] = true;
            $.extend(true, arr, obj);
            obj["pivotTemplate"] = $('#TemplateId').val();
            obj["modeSearch"] = "Recently";
            $.extend(true, arr, obj);

            //Nhóm vật tư
            var ProductCategoryCodeList = $('#ProductCategoryCode').val();
            if (ProductCategoryCodeList != null && ProductCategoryCodeList.length > 0) {
                var productCategoryCode = {};

                productCategoryCode['ProductCategoryCode'] = ProductCategoryCodeList;
                $.extend(true, arr, productCategoryCode);
            }
            //Các lỗi BH thường gặp
            var UsualErrorCodeList = $('#UsualErrorCode').val();
            if (UsualErrorCodeList != null && UsualErrorCodeList.length > 0) {
                var usualErrorCode = {};
                usualErrorCode['UsualErrorCode'] = UsualErrorCodeList;
                $.extend(true, arr, usualErrorCode);
            }
            //Mã màu SP
            var ProductColorCodeList = $('#ProductColorCode').val();
            if (ProductColorCodeList != null && ProductColorCodeList.length > 0) {
                var productColorCode = {};

                productColorCode['ProductColorCode'] = ProductColorCodeList;
                $.extend(true, arr, productColorCode);
            }

            //Phân cấp sản phẩm
            var ProductLevelCodeList = $('#ProductLevelCode').val();
            if (ProductLevelCodeList != null && ProductLevelCodeList.length > 0) {
                var productLevelCode = {};

                productLevelCode['ProductLevelCode'] = ProductLevelCodeList;
                $.extend(true, arr, productLevelCode);
            }
            //Save localStorage
            localStorage.setItem('pageId-' + currentPageId, JSON.stringify(arr));
            ISD.Download("/@CurrentUrl/ChangeTemplate", arr);
        });

        //$(document).on("change", "select[name='ProductCategoryCode']", function () {
        //    var ProductCategoryCode = $(this).val();
        //    $.ajax({
        //        type: "POST",
        //        url: "/Work/Task/GetUsualErrorByProductCategory",
        //        data: {
        //            ProductCategoryCode: ProductCategoryCode,
        //            IsTakeAll: true
        //        },
        //        success: function (jsonData) {
        //            $("#UsualErrorCode").html("");
        //            $("#UsualErrorCode").append("<option value=''>-- Vui lòng chọn --</option>");
        //            if (jsonData != null && jsonData.length > 0) {
        //                $.each(jsonData, function (index, value) {
        //                    $("#UsualErrorCode").append("<option value='" + value.CatalogCode + "'>" + value.CatalogText_vi + "</option>");
        //                });
        //            }
        //        }
        //    });
        //});

        //CommonDate
        $(document).on("change", "select[name='CommonDate']", function () {
            var commonDate = $(this).val();
            $.ajax({
                type: "POST",
                url: "/Utilities/CommonDate/Get",
                data: {
                    CommonDate: commonDate
                },
                success: function (jsonData) {
                    $("#frmSearch input[name='FromDate']").val(jsonData.FromDate);
                    $("#frmSearch input[name='ToDate']").val(jsonData.ToDate);
                    if (jsonData.FromDate != '' && jsonData.FromDate != '') {
                        $("#frmSearch input[name='FromDate']").prop("readonly", true);
                        $("#frmSearch input[name='ToDate']").prop("readonly", true);
                    } else {
                        $("#frmSearch input[name='FromDate']").prop("readonly", false);
                        $("#frmSearch input[name='ToDate']").prop("readonly", false);
                    }

                }
            });
        });



    </script>
    <script>
        //Get data of form search name function is required
        function GetDataFormSearch() {
            //Get value in search form
            var formdata = $("#frmSearch").serializeArray();
            var data = {};
            $(formdata).each(function (index, obj) {
                data[obj.name] = obj.value;
            });

            //Nhóm vật tư
            var ProductCategoryCodeList = $('#ProductCategoryCode').val();
            if (ProductCategoryCodeList != null && ProductCategoryCodeList.length > 0) {
                var productCategoryCode = {};

                productCategoryCode['ProductCategoryCode'] = ProductCategoryCodeList;
                $.extend(true, data, productCategoryCode);
            }
            //Các lỗi BH thường gặp
            var UsualErrorCodeList = $('#UsualErrorCode').val();
            if (UsualErrorCodeList != null && UsualErrorCodeList.length > 0) {
                var usualErrorCode = {};

                usualErrorCode['UsualErrorCode'] = UsualErrorCodeList;
                $.extend(true, data, usualErrorCode);
            }
            //Mã màu SP
            var ProductColorCodeList = $('#ProductColorCode').val();
            if (ProductColorCodeList != null && ProductColorCodeList.length > 0) {
                var productColorCode = {};

                productColorCode['ProductColorCode'] = ProductColorCodeList;
                $.extend(true, data, productColorCode);
            }

            //Phân cấp sản phẩm
            var ProductLevelCodeList = $('#ProductLevelCode').val();
            if (ProductLevelCodeList != null && ProductLevelCodeList.length > 0) {
                var productLevelCode = {};

                productLevelCode['ProductLevelCode'] = ProductLevelCodeList;
                $.extend(true, data, productLevelCode);
            }

            return JSON.stringify(data);
        }
    </script>

    <!--Script Print Report-->
    <script>
        $(document).on("click", "#btn-export-pdf", function () {
            var $btn = $(this);
            $btn.button("loading");

            ExportPDF();

            setTimeout(function () {
                $btn.button("reset");
            }, 3000);
        });

        function ExportPDF() {
            var arr = {};
            var obj = {};
            var data = $("#frmSearch").serializeArray();

            $.each(data, function (index, val) {
                obj[val.name] = val.value;
                $.extend(true, arr, obj);
            });

            obj["templateId"] = $('#TemplateId').val();
            $.extend(true, arr, obj);

            ISD.Download("/@CurrentUrl/Print", arr, true);
        }
    </script>
}
