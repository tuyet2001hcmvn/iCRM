@model AccessoryViewModel

@{
    ViewBag.Title = LanguageResource.Update + " " + LanguageResource.Sale_Accessory.ToLower();
    string CurrentController = ConstController.Accessory;
    string CurrentArea = ConstArea.Sale;
    string MBH = "bddec2cb-9c3e-4cb9-9824-587479caa492";

    string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController);
}

@using (Html.BeginForm("Edit", null, FormMethod.Post, new { @enctype = "multipart/form-data", @id = "frmEdit" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(p => p.AccessoryId)
    @Html.HiddenFor(p => p.AccessoryCode)
    @Html.HiddenFor(p => p.AccessoryCategoryId)
    @Html.HiddenFor(p => p.isHelmet)
    @Html.HiddenFor(p => p.ImageUrl)

    <div class="content-header clearfix">
        <h1 class="pull-left">
            @ViewBag.Title
            @HtmlExtensions.BackButton(CurrentArea, CurrentController)
        </h1>
        <div class="pull-right">
            @HtmlExtensions.SaveButton("btn-save", LanguageResource.Btn_Save)
            @HtmlExtensions.SaveButton("btn-save-continue", LanguageResource.Btn_SaveAndContinue)
        </div>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.AccessoryCategoryId)
                            </div>
                            <div class="col-md-9">
                                @Html.RequiredTextboxFor(p => p.AccessoryCategoryName, new { disabled = "disabled" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.AccessoryCode)
                            </div>
                            <div class="col-md-9">
                                @Html.RequiredTextboxFor(p => p.AccessoryCode, new { disabled = "disabled" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.AccessoryName)
                            </div>
                            <div class="col-md-9">
                                @Html.RequiredTextboxFor(p => p.AccessoryName)
                            </div>
                        </div>

                        <div class="form-group isHelmet">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.HelmetType)
                            </div>
                            <div class="col-md-9">
                                @Html.HelmetAdultRadioButton(p => p.isHelmetAdult)
                            </div>
                        </div>

                        <div class="form-group isHelmet">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.Size)
                            </div>
                            <div class="col-md-9">
                                @Html.RequiredTextboxFor(p => p.Size)
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.ImageUrl)
                            </div>
                            <div class="col-md-9">
                                @Html.RequiredTextboxFor(p => p.ImageUrl, new { type = "file" })
                                @if (Model.ImageUrl != null)
                                {
                                    <img id="image-edit-view" src="/Upload/Accessory/@Model.ImageUrl" />
                                }
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.OrderIndex)
                            </div>
                            <div class="col-md-9">
                                @Html.RequiredTextboxFor(p => p.OrderIndex)
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.Actived)
                            </div>
                            <div class="col-md-9">
                                @Html.ActivedRadioButton(p => p.Actived)
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script>
        //set event btn-save, btn-save-continue for btn-edit
        $(document).ready(function () {
            ISD.EditInitial("@CurrentUrl");
            var isHelmet = $("#isHelmet").val();
            if (isHelmet == "True") {
                $("div.isHelmet").show();
            }
        });

        //btn-del-product: delete row in product promotion table
        $(document).on("click", ".btn-del-product", function () {
            var id = $(this).data("id");
            $.ajax({
                type: "POST",
                url: "/Sale/Accessory/DeleteAccessoryColor?STT=" + id,
                data: $("#frmEdit").serialize(),
                success: function (data) {
                    $("#imageList").html(data);
                }
            });
        });

        //btn-add-row: insert new row product
        $(document).on("click", ".btn-add-row", function () {
            var ImageUrl = $("#ImageUrl").val();

            if (ImageUrl == "") {
                alertPopup(false, '@LanguageResource.Accessory_NotExistImage');
            }
            else {
                var frm = $("#frmEdit"),
                    formData = new FormData(),
                    formParams = frm.serializeArray();
                if (frm.valid()) {
                    $.each(frm.find('input[type="file"]'), function (i, tag) {
                        $.each($(tag)[0].files, function (i, file) {
                            formData.append(tag.name, file);
                        });
                    });

                    $.each(formParams, function (i, val) {
                        formData.append(val.name, val.value);
                    });

                    $.ajax({
                        url: "/Sale/Accessory/InsertAccessoryColor",
                        data: formData,
                        processData: false,
                        contentType: false,
                        type: 'POST',
                        success: function (htmlData) {
                            $("#imageList").html(htmlData);
                            $('#accessoryColor select').val($('#accessoryColor select option:first-child').val()).trigger("change");
                        },
                        error: function (xhr, status, error) {
                            alertPopup(false, xhr.responseText);
                        }
                    });
                }
                else {
                    //show error invalid
                    var validator = frm.validate();
                    $.each(validator.errorMap, function (index, value) {
                        console.log('Id: ' + index + ' Message: ' + value);
                    });
                }
            }
            return false;
        });

        //ChangeColor
        $(document).on("change", "#HelmetColorCode", function () {
            var HelmetColorCode = $(this).val();
            if (HelmetColorCode == undefined) {
                $("[aria-labelledby='select2-HelmetColorCode-container']").css("background-color", "#fff");
            }
            else {
                $("[aria-labelledby='select2-HelmetColorCode-container']").css("background-color", HelmetColorCode);
            }
        });
    </script>
}



