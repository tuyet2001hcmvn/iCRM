@model ColorModel

@{
    ViewBag.Title = LanguageResource.Create + " " + LanguageResource.Sale_Color.ToLower();
    string CurrentController = ConstController.Color;
    string CurrentArea = ConstArea.Sale;

    string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController);
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { @enctype = "multipart/form-data", @id = "frmCreate" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <input type="hidden" name="isContinue" id="isContinue" value="@ViewBag.isContinue" />
    <input type="hidden" name="Data" id="Data" value="@ViewBag.Data" />

    <div class="content-header clearfix">
        <h1 class="pull-left">
            @ViewBag.Title
            @HtmlExtensions.BackButton(CurrentArea, CurrentController)
        </h1>
        <div class="pull-right">
            @HtmlExtensions.SaveButton("btn-save", LanguageResource.Btn_Save)
            @HtmlExtensions.SaveButton("btn-save-continue", LanguageResource.Btn_SaveAndContinue)
        </div>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-body">

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.ColorShortName)
                            </div>
                            <div class="col-md-9">
                                @Html.RequiredTextboxFor(p => p.ColorShortName)
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.ColorCode)
                            </div>
                            <div class="col-md-9">
                                <div id="myColorPicker" class="input-group colorpicker-component">
                                    <input type="text" name="ColorCode" id="ColorCode" value="RGB(255,0,0)" class="form-control" />
                                    <span class="input-group-addon"><i></i></span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.ColorName)
                            </div>
                            <div class="col-md-9">
                                @Html.RequiredTextboxFor(p => p.ColorName)
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.OrderIndex)
                            </div>
                            <div class="col-md-9">
                                @Html.RequiredTextboxFor(p => p.OrderIndex)
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                @Html.TooltipLabelFor(p => p.Actived)
                            </div>
                            <div class="col-md-9">
                                @Html.ActivedRadioButton(p => p.Actived)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section scripts {
    <script>
       //set event btn-save, btn-save-continue for btn-create
        $(document).ready(function () {
            ISD.CreateInitial("@CurrentUrl");
        });

        $(function () {
            $('#myColorPicker').colorpicker({
                format: 'rgb',
                customClass: 'colorpicker-2x',
                sliders: {
                    saturation: {
                        maxLeft: 200,
                        maxTop: 200
                    },
                    hue: {
                        maxTop: 200
                    },
                    alpha: {
                        maxTop: 200
                    }
                }
            });
        });
    </script>
}


