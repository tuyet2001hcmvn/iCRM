@model ProductViewModel
@{
    ViewBag.Title = LanguageResource.Sale_Product;
    string CurrentController = ConstController.Product;
    string CurrentArea = ConstArea.Sale;

    string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController);
    bool isHasPermissionEdit = HtmlExtensions.GetPermission(CurrentUrl, ConstFunction.Edit);
}
<div class="content-header clearfix">
    <h1 class="pull-left">
        @ViewBag.Title
    </h1>
    <div class="pull-right">
        @HtmlExtensions.CreateButton(CurrentArea, CurrentController)
        @HtmlExtensions.ExportButton(CurrentArea, CurrentController)
        @HtmlExtensions.ImportButton(CurrentArea, CurrentController)
    </div>
</div>
<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                @using (Html.BeginForm("_Search", null, FormMethod.Post, new { @id = "frmSearch", @class = "isd-form-search" }))
                {
                    <div class="panel-body">
                        <div class="row">

                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.ERPProductCode)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(p => p.ERPProductCode, new { @class = "form-control text-box single-line" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.ProductCode)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(p => p.ProductCode, new { @class = "form-control text-box single-line" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.ProductName)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.TextBoxFor(p => p.ProductName, new { @class = "form-control text-box single-line" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.Actived)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.DropDownList("Actived", new List<SelectListItem>(){
                                        new SelectListItem(){Text = LanguageResource.Dropdownlist_All, Value = ""},
                                        new SelectListItem(){Text = LanguageResource.Actived_True, Value = "true", Selected = true},
                                        new SelectListItem(){Text = LanguageResource.Actived_False, Value = "false"}
                                    }, new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>

                            @*<div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.isHot)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownList("isHot", new List<SelectListItem>(){
                                            new SelectListItem(){Text = LanguageResource.Dropdownlist_All, Value = ""},
                                            new SelectListItem(){Text = LanguageResource.Product_isHotProduct, Value = "true"},
                                            new SelectListItem(){Text = LanguageResource.Product_isNotHotProduct, Value = "false"}
                                        }, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>*@

                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.ParentCategoryId)
                                    </div>
                                    <div class="col-md-8">
                                        @Html.DropDownList("ParentCategoryId", null, LanguageResource.Dropdownlist_All, new { @class = "form-control with-search" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        @Html.TooltipLabelFor(p => p.CategoryName)
                                    </div>
                                    <div class="col-md-8">
                                        @*<select name="CategoryId" id="CategoryId" class="form-control with-search">
                                                <option>@LanguageResource.Dropdownlist_All</option>
                                            </select>*@
                                        @Html.DropDownList("CategoryId", null, LanguageResource.Dropdownlist_All, new { @class = "form-control with-search" })
                                    </div>
                                </div>
                            </div>

                            @*<div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.TooltipLabelFor(p => p.ConfigurationId)
                                        </div>
                                        <div class="col-md-8">
                                            @Html.DropDownList("ConfigurationId", null, LanguageResource.Dropdownlist_All, new { @class = "form-control with-search" })
                                        </div>
                                    </div>
                                </div>*@

                        </div>

                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="col-md-8 col-md-offset-5">
                                    @HtmlExtensions.SearchButton()
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="divSearchResult">
                        <table class="table table-bordered table-striped table-hover dataTableServerSide no-footer">
                            <thead class="isd-table-header">
                                <tr>
                                    <th class="text-center isd-table-th-stt">@LanguageResource.NumberIndex</th>
                                    <th>@Html.DisplayNameFor(p => p.CompanyCode)</th>
                                    <th>@Html.DisplayNameFor(p => p.ERPProductCode)</th>
                                    <th>@Html.DisplayNameFor(p => p.ProductCode)</th>
                                    <th>@Html.DisplayNameFor(p => p.ProductGroups)</th>
                                    <th>@Html.DisplayNameFor(p => p.ProductName)</th>
                                    <th>@Html.DisplayNameFor(p => p.ParentCategoryName)</th>
                                    <th>@Html.DisplayNameFor(p => p.CategoryName)</th>
                                    <th class="text-right">@Html.DisplayNameFor(p => p.Price)</th>
                                    <th class="text-right">@Html.DisplayNameFor(p => p.ProcessingValue)</th>
                                    <th class="text-right">@Html.DisplayNameFor(p => p.SampleValue)</th>
                                    <th class="text-center">@Html.DisplayNameFor(p => p.Actived)</th>
                                    <th class="text-center">@LanguageResource.Actions</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="delete-confirm"></div>
<div class="loading-modal"></div>

@section scripts {
    <script>
        //load default and set event
        $(document).ready(function () {
            //ISD.SearchInitial("@CurrentUrl");
            PaggingServerSide("@CurrentUrl");
            ISD.ShowMessage(window.location.href);
            ISD.UploadFile("@CurrentUrl");
        });

        $("#btn-search").click(function () {
            PaggingServerSide("@CurrentUrl");
        });

        //trigger enter click when fill in search form
        $(document).on("keyup", "#frmSearch", function (evt) {
            if (evt.keyCode == 13) {
                $("#btn-search").trigger("click");
            }
        });

        function PaggingServerSide(controller) {
            $(".dataTableServerSide").DataTable().clear().destroy();
            $(".dataTableServerSide")
                .on('processing.dt', function (e, settings, processing) {
                    ISD.LoadingDataTable(processing, '.dataTableServerSide');
                })
                .DataTable({
                proccessing: true,
                serverSide: true,
                paging: true,
                scrollX: false,
                ajax: {
                    type: 'POST',
                    url: "/" + controller + "/_PaggingServerSide",
                    contentType: 'application/json',
                    data: function (d) {
                        var arr = {};
                        //data search
                        var data = $("#frmSearch").serializeArray();
                        $.each(data, function (index, val) {
                            var obj = {};
                            obj[val.name] = val.value;
                            $.extend(true, arr, obj);
                        });
                        //data datatable (draw, start, length,...)
                        $.extend(true, arr, d);

                        return JSON.stringify(arr);
                    }
                },
                columns: [
                    {
                        "data": "STT",
                        "className": "text-center"
                    },
                    {
                        "data": "CompanyCode",
                        "className": "text-center",
                        "orderable": true,
                    },
                    {
                        "data": "ERPProductCode",
                        "className": "text-center",
                        "orderable": true,
                    },
                    {
                        "data": "ProductCode",
                        "orderable": true,
                    },
                    
                    {
                        "data": "ProductGroups",
                        "orderable": false,
                    },
                    {
                        "data": "ProductName",
                        "orderable": true,
                        "render": function (data, type, row) {
                            if (type === "display" || type === "filter") {
                                if ("@isHasPermissionEdit" == "True" || "@isHasPermissionEdit" == "true") {
                                    return "<a href='/Sale/Product/Edit/" + row['ProductId'] + "' title='" + data + "'>" + data + "</a>"
                                }
                                else {
                                    return data;
                                }
                            }
                            return data;
                        }
                    },
                    {
                        "data": "ParentCategoryName",
                        "orderable": true,
                        "render": function (data, type, row) {
                            if (type === "display" || type === "filter") {
                                return "<a href='/Sale/Brand/Edit/" + row['ParentCategoryId'] + "' title='" + data + "'>" + data + "</a>"
                            }
                            return data;
                        }
                    },
                    {
                        "data": "CategoryName",
                        "orderable": false,
                        "render": function (data, type, row) {
                            if (type === "display" || type === "filter") {
                                return "<a href='/Sale/Category/Edit/" + row['CategoryId'] + "' title='" + data + "'>" + data + "</a>"
                            }
                            return data;
                        }
                    },
                    //{
                    //    "data": "OrderIndex", "className": "text-right"
                    //},
                    {
                        "data": "Price",
                        "orderable": true,
                        "className": "text-right",
                        "render": function (data, type, row) {
                            if (type === "display" || type === "filter") {
                                if (data == "" || data == null) {
                                    return "";
                                }
                                return formatCurrency(data);
                            }
                            return data;
                        }
                    },
                    
                    {
                        "data": "ProcessingValue",
                        "orderable": true,
                        "className": "text-right",
                        "render": function (data, type, row) {
                            if (type === "display" || type === "filter") {
                                if (data == "" || data == null) {
                                    return "";
                                }
                                return formatCurrency(data);
                            }
                            return data;
                        }
                    },
                    {
                        "data": "SampleValue",
                        "orderable": true,
                        "className": "text-right",
                        "render": function (data, type, row) {
                            if (type === "display" || type === "filter") {
                                if (data == "" || data == null) {
                                    return "";
                                }
                                return formatCurrency(data);
                            }
                            return data;
                        }
                    },
                    {
                        "data": "Actived",
                        "orderable": false,
                        "className": "text-center",
                        "render": function (data, type, row) {
                            if (type === "display" || type === "filter") {
                                if (data == true) {
                                    return "<i class='fa fa-check true-icon'></i>";
                                }
                                else {
                                    return "<i class='fa fa-close false-icon'></i>";
                                }
                            }
                            return data;
                        }
                    },
                    {   
                        "data": "ProductId",
                        "orderable": false,
                        "className": "text-center",
                        "render": function (data, type, row) {
                            if (type === "display" || type === "filter") {
                                return "<a class=\"btn btn-default btn-edit\" href=\"/Sale/Product/Edit/" + data + "\" onclick=\"$(this).button('loading')\"><i class='fa fa-pencil'></i> Sửa</a>";
                            }
                            return "";
                        }
                    }
                ],
                destroy: true,
                language: {
                    sProcessing: "Đang xử lý...",
                    sLengthMenu: "Xem _MENU_ mục",
                    sZeroRecords: "Không tìm thấy dòng nào phù hợp",
                    sInfo: "Đang xem _START_ đến _END_ trong tổng số _TOTAL_ mục",
                    sInfoEmpty: "Đang xem 0 đến 0 trong tổng số 0 mục",
                    sInfoFiltered: "(được lọc từ _MAX_ mục)",
                    sInfoPostFix: "",
                    sSearch: "Tìm nội dung:",
                    sUrl: "",
                    oPaginate: {
                        sFirst: "Đầu",
                        sPrevious: "&laquo;",
                        sNext: "&raquo;",
                        sLast: "Cuối"
                    }
                },
                columnDefs: [
                    { targets: [0, 1], visible: true },
                    { targets: 'no-sort', visible: false }
                ],
                "sDom": '<"top"flp>rt<"bottom"ip><"clear">',
            });
        }

        @*$(document).on("change", "#ParentCategoryId", function () {
            var ParentCategoryId = $(this).val();
            if (ParentCategoryId == "") {
                $("#CategoryId").html("<option value=''>@LanguageResource.Dropdownlist_All</option>");
                        $("#select2-CategoryId-container").html("@LanguageResource.Dropdownlist_All");
            }
            else {
                $.ajax({
                    type: "POST",
                    url: "/Sale/Product/GetCategoryByBrand",
                    data: {
                        ParentCategoryId: ParentCategoryId
                    },
                    success: function (jsonData) {
                        if (jsonData.length > 0) {
                            $("#CategoryId").html("");
                            $("#CategoryId").append("<option value=''>@LanguageResource.Dropdownlist_All</option>");
                            $.each(jsonData, function (index, value) {
                                $("#CategoryId").append("<option value='" + value.Value + "'>" + value.Text + "</option>");
                            });
                        }
                    }
                });
            }
        });*@
    </script>
}
