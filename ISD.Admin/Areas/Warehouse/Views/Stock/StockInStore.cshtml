@model StockInStoreViewModel
@{
   ViewBag.Title = LanguageResource.Create + " " + LanguageResource.StockInStore.ToLower();
   // string CurrentController = ConstController.Stock;
   // string CurrentArea = ConstArea.Warehouse;

   // string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController);
}

<div class="box box-primary">
    <div class="box-header with-border">
        <h3 class="box-title">@ViewBag.Title</h3>
        <div class="pull-right">
            @HtmlExtensions.SaveButton("btn-save-stockStore", LanguageResource.Btn_Save)
            @*@HtmlExtensions.SaveButton("btn-save-continue", LanguageResource.Btn_SaveAndContinue)*@
        </div>
    </div>
    <div class="box-body">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { @enctype = "multipart/form-data", @id = "frmCreateStockStore" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <input type="hidden" name="isContinue" id="isContinue" value="@ViewBag.isContinue" />
            <input type="hidden" name="Data" id="Data" value="@ViewBag.Data" />
            <div class="form-group col-md-6">
                @Html.TooltipLabelFor(p => p.StockId)
                @Html.RequiredDropDownListFor(p => p.StockId,null,LanguageResource.Dropdownlist_Choose)
            </div>

            <div class="form-group col-md-6">
                @Html.TooltipLabelFor(p => p.StoreId)
                @Html.RequiredDropDownListFor(p => p.StoreId, null, LanguageResource.Dropdownlist_Choose)
            </div>
        }
    </div>
</div>
