@model TaskViewModel
@using ISD.Core
@{
    string Title = ViewBag.CommentTitle;
    ViewBag.Title = Model.WorkFlowCode == ConstWorkFlow.GT ? Model.Summary : Title;
    string CurrentController = ConstController.Task;
    string CurrentArea = ConstArea.Work;

    string CurrentUrl = HtmlExtensions.GetCurrentUrl(CurrentArea, CurrentController, "?Type=" + ViewBag.Type);
    var GoogleMapAPIKey = ViewBag.GoogleMapAPIKey;
    var numberProperty3 = ViewBag.NumberProperty3;

    //Cấu hình thuộc tính
    var configList = (List<WorkFlowConfigModel>)ViewBag.WorkFlowConfig;
    var fieldCodeList = (List<string>)ViewBag.WorkFlowConfigCode;
    var hiddenFieldList = (List<string>)ViewBag.WorkFlowHiddenField;

    //Subtask
    var typeList = (List<WorkFlowCategoryViewModel>)ViewBag.SubtaskType;
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { @enctype = "multipart/form-data", @id = "frmEdit" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <input type="hidden" name="isContinue" id="isContinue" value="@ViewBag.isContinue" />
    <input type="hidden" name="Data" id="Data" value="@ViewBag.Data" />
    @Html.HiddenFor(p => p.TaskId)
    @Html.Hidden("Type", (string)ViewBag.Type)
    @Html.Hidden("TaskStatusBackgroundColor", (string)ViewBag.TaskStatusBackgroundColor)
    @Html.Hidden("TaskStatusColor", (string)ViewBag.TaskStatusColor)
    @Html.Hidden("isInPopup", false)
    @Html.HiddenFor(p => p.ParentTaskId)

    <div id="divAlertWarningTask" class="alert alert-warning alert-dismissable divPopupMessage" style="display: none">
        <button type="button" class="alert-close close" aria-hidden="true" data-div="divAlertWarning">×</button>
        <div class="alert-message">
        </div>
    </div>
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @if (Model.WorkFlowCode == ConstWorkFlow.GT)
            {
                @Model.Summary
                @HtmlExtensions.BackButton(ConstArea.Customer, ConstController.Appointment, "?ModeSearch=Recently")
            }
            else
            {
                @Title.ToUpper()
                @HtmlExtensions.BackButton(CurrentArea, CurrentController, "?Type=" + ViewBag.Type + "&ModeSearch=Recently")
            }
        </h1>
        <div class="pull-right">
            <a class="btn bg-blue" id="btn-save-task-all" onclick="$(this).button('loading')">
                <i class="fa fa-floppy-o"></i> @LanguageResource.Btn_Save
            </a>
            <a class="btn bg-blue" id="btn-save-task-all-continue" onclick="$(this).button('loading')">
                <i class="fa fa-floppy-o"></i> @LanguageResource.Btn_SaveAndContinueEdit
            </a>
            @if (ViewBag.Type == ConstWorkFlowCategory.TICKET_MLC)
            {
                <a target="_blank" href="/Work/Task/Create?Type=TICKET_MLC&Reporter=&Assignee=&CopyFrom=@ViewBag.Id" class="btn btn-primary btn-create" data-current-url="Work/Task" data-id="" data-item-name=""><i class='fa fa-plus-square'></i> Copy</a>
            }

        </div>
    </div>

    <div class="content editTask">
        <div class="panel-group">
            <div class="panel panel-default">
                <div id="exTab1" class="nav-tabs-custom">
                    <ul class="nav nav-pills nav nav-tabs">
                        <li class="active">
                            <a href="#tab-thong-tin" data-toggle="tab">@LanguageResource.GeneralInformation</a>
                        </li>
                        @if (fieldCodeList.Contains(PropertyHelper.GetPropertyName<TaskViewModel, string>(p => p.Tab_FileUrl)))
                        {
                            if (!hiddenFieldList.Contains(PropertyHelper.GetPropertyName<TaskViewModel, string>(p => p.Tab_FileUrl)))
                            {
                                <li>
                                    <a href="#tab-hinh-anh" id="img-tab" data-toggle="tab">@LanguageResource.Task_FileUrl</a>
                                </li>
                            }
                        }
                        @if (fieldCodeList.Contains(PropertyHelper.GetPropertyName<TaskViewModel, string>(p => p.Tab_Product)))
                        {
                            if (!hiddenFieldList.Contains(PropertyHelper.GetPropertyName<TaskViewModel, string>(p => p.Tab_Product)))
                            {
                                <li>
                                    <a href="#tab-san-pham" data-toggle="tab">@LanguageResource.Task_Accessory</a>
                                </li>
                            }
                        }
                        @if (fieldCodeList.Contains(PropertyHelper.GetPropertyName<TaskViewModel, string>(p => p.Tab_Catalogue)))
                        {
                            if (!hiddenFieldList.Contains(PropertyHelper.GetPropertyName<TaskViewModel, string>(p => p.Tab_Catalogue)))
                            {
                                <li>
                                    <a href="#tab-catalogue" data-toggle="tab">@LanguageResource.Catalogue</a>
                                </li>
                            }
                        }
                        @*@if (fieldCodeList.Contains(PropertyHelper.GetPropertyName<TaskViewModel, string>(p => p.Tab_Survey)))
                        {
                            if (!hiddenFieldList.Contains(PropertyHelper.GetPropertyName<TaskViewModel, string>(p => p.Tab_Survey)))
                            {
                                <li>
                                    <a href="#tab-survey" data-toggle="tab">@LanguageResource.Survey</a>
                                </li>
                            }
                        }*@
                        <li>
                            <a href="#tab-thay-doi" data-toggle="tab">@LanguageResource.ChangeDataLog</a>
                        </li>
                    </ul>

                    <div class="tab-content clearfix">
                        <div class="tab-pane active" id="tab-thong-tin">
                            @using (Html.BeginForm(null, null, FormMethod.Post, new { @enctype = "multipart/form-data", @id = "frmEdit" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true)

                                if (Model.taskProcessingList != null && Model.taskProcessingList.Count > 0)
                                {
                                    @Html.Partial("_TaskProcessing")
                                }

                                if (ViewBag.Mode == "simple")
                                {
                                    <div class="form-horizontal frmUpdateTask">
                                        @Html.Partial("_CreateTaskInfo", Model)

                                        <!--Subtask-->
                                        @if (typeList != null && typeList.Count > 0 && !Model.ParentTaskId.HasValue)
                                        {
                                            <div class="form-group col-md-12">
                                                <div class="box box-info">
                                                    <div class="box-body">
                                                        <div class="col-md-3">
                                                            <div class="label-wrapper"><label class="control-label">Lịch trình</label></div>
                                                        </div>
                                                        <div class="col-md-9">
                                                            @Html.Partial("_SubtaskList", Model.subtaskList)
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="frmUpdateTask">
                                        @Html.Partial("_TaskInfo2")
                                    </div>
                                }
                            }
                        </div>
                        @if (fieldCodeList.Contains(PropertyHelper.GetPropertyName<TaskViewModel, string>(p => p.Tab_FileUrl)))
                        {
                            if (!hiddenFieldList.Contains(PropertyHelper.GetPropertyName<TaskViewModel, string>(p => p.Tab_FileUrl)))
                            {
                                <div class="tab-pane" id="tab-hinh-anh">
                                    @Html.Partial("_ImageInfo")
                                </div>
                            }
                        }
                        @if (fieldCodeList.Contains(PropertyHelper.GetPropertyName<TaskViewModel, string>(p => p.Tab_Product)))
                        {
                            if (!hiddenFieldList.Contains(PropertyHelper.GetPropertyName<TaskViewModel, string>(p => p.Tab_Product)))
                            {
                                <div class="tab-pane" id="tab-san-pham">
                                    @Html.Partial("_ProductInfo")
                                </div>
                            }
                        }
                        @if (fieldCodeList.Contains(PropertyHelper.GetPropertyName<TaskViewModel, string>(p => p.Tab_Catalogue)))
                        {
                            if (!hiddenFieldList.Contains(PropertyHelper.GetPropertyName<TaskViewModel, string>(p => p.Tab_Catalogue)))
                            {
                                <div class="tab-pane" id="tab-catalogue">
                                    @Html.Action("_ListCatalog", "Catalogue", new { area = ConstArea.Customer, ProfileId = Model.ProfileId, TaskId = Model.TaskId })
                                    @Html.Action("_ListCatalogKe", "Catalogue", new { area = ConstArea.Customer, ProfileId = Model.ProfileId, TaskId = Model.TaskId })
                                    @Html.Action("_ListCatalogMau", "Catalogue", new { area = ConstArea.Customer, ProfileId = Model.ProfileId, TaskId = Model.TaskId })
                                </div>
                            }
                        }
                       
                               
                        <div class="tab-pane" id="tab-thay-doi">
                            @Html.Action("_List", "ChangeDataLog", new { area = ConstArea.Utilities, @id = Model.TaskId })
                        </div>
                    </div>

                    <div class="text-center" style="padding-bottom: 20px;">
                        <a class="btn bg-blue" id="btn-save-fake" onclick="$(this).button('loading')"><i class="fa fa-floppy-o"></i> @LanguageResource.Btn_Save</a>
                        <a class="btn bg-blue" id="btn-save-edit-fake" onclick="$(this).button('loading')">
                            <i class="fa fa-floppy-o"></i> @LanguageResource.Btn_SaveAndContinueEdit
                        </a>
                    </div>
                </div>

            </div>

        </div>
    </div>


    <div class="loading-modal"></div>
}

@section head {
    <script src="~/Content/Plugin/ckeditor/ckeditor.js"></script>
    <script src="~/ckfinder/ckfinder.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
}

@section components{
    @Html.Partial("~/Areas/Sale/Views/Product/_ProductSearch.cshtml", new ProductSearchViewModel())
    @Html.Partial("~/Areas/Sale/Views/Product/_AccessorySearch.cshtml", new ProductSearchViewModel())
    @Html.Partial("_DeletePopups")
    @Html.Partial("_FormAddFiles")
    <div class="modal fade" id="divProductPopup" role="dialog"></div>
    <div class="divProfilePopup"></div>
    <div class="divContactPopup"></div>
    <div class="divConstructionPopup"></div>
    @*Modal cập nhật loại xuất catalogue*@
    <div id="divUpdateType" class="modal fade" role="dialog">
        <div class="modal-dialog modal-dialog-sm">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">CẬP NHẬT LOẠI XUẤT CATALOGUE</h4>
                </div>
                <form class="frmUpdateType">
                    <input type="hidden" name="UpdateDeliveryId" id="UpdateDeliveryId" />
                    <div class="form-horizontal">
                        <div class="modal-body">
                            <div id="divAlertPopupWarning" class="alert alert-warning alert-dismissable" style="display: none">
                                <button type="button" class="alert-close close" aria-hidden="true" data-div="divAlertPopupWarning">×</button>
                                <div class="alert-message">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="label-wrapper"><label class="control-label" for="ProfileForeignCode">Loại Catalogue</label></div>
                                </div>
                                <div class="col-md-8">
                                    <select name="DeliveryType" id="DeliveryType">
                                        <option value="CTL">Catalogue</option>
                                        <option value="KE">Kệ</option>
                                        <option value="MAU">Mẫu</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <span class="btn btn-default" data-dismiss="modal">@LanguageResource.Btn_Cancel</span>
                            <a class="btn btn-primary pull-right" id="btn-confirm-update">
                                @LanguageResource.Btn_Save
                            </a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

@section scripts {
    <script src="https://maps.googleapis.com/maps/api/js?language=vi&key=@GoogleMapAPIKey&libraries=places&callback=GoogleMapsInitialize" async defer></script>
    @Scripts.Render("~/Areas/Work/Scripts/EditTask")
    <script>
       //set event btn-save, btn-save-continue for btn-create
        $(document).ready(function () {
            ISD.EditInitial("@CurrentUrl");
            if ($("select[name='WorkFlowId']").length > 0) {
                $("select[name='WorkFlowId']").select2({
                    templateResult: formatState
                });
            }
            numericInput();
            ChangeDropdownColor();
            ISD.DateTimeInitial();
            GetAddressByContact("profile");
            //GetAddressByContact("construction");
            $("select[name='ConstructionUnitContact']").trigger("change");
            $(".numberProperty3").html("@numberProperty3");
            $("input[name='IsAssignGroup']").trigger("change");
            $('input[type=radio][name="isVisitCabinetPro"]').trigger("change");
            $('select[name = "CustomerRatings"]').trigger("change");

            loadRatingProduct();
            loadRatingService();

            //google.maps.event.addDomListener(window, 'load', GoogleMapsInitialize);
        });

        $(document).on("click", "#btn-save-fake", function () {
            $("#btn-save-task-all").click();
        });
        $(document).on("click", "#btn-save-edit-fake", function () {
            $("#btn-save-task-all-continue").click();
        });
        //Thêm hình ảnh trước select option
        function formatState(state) {
            if (!state.id) {
                return state.text;
            }
            var $state = $(
                '<span><img style="width: 25px" src="/Upload/WorkFlow/WorkFlow_' + state.element.value.toLowerCase() + '.png" class="img-flag" /></span><span class="ml-10">' + state.text + '</span>'
            );
            return $state;
        };

        function GoogleMapsInitialize() {
            var input = document.getElementById('VisitAddress');
            if (input != null) {
                if (input.value == "") {
                    document.getElementById('lat').value = "";
                    document.getElementById('lng').value = "";
                    document.getElementById('lat_display').value = "";
                    document.getElementById('lng_display').value = "";
                }
                else {
                    var autocomplete = new google.maps.places.Autocomplete(input);
                    google.maps.event.addListener(autocomplete, 'place_changed', function () {
                        var place = autocomplete.getPlace();
                        document.getElementById('lat').value = place.geometry.location.lat();
                        document.getElementById('lng').value = place.geometry.location.lng();

                        document.getElementById('lat_display').value = place.geometry.location.lat();
                        document.getElementById('lng_display').value = place.geometry.location.lng();
                    });
                }
            }
        }

        $(document).on("change", "input[name='VisitAddress']", function () {
            GoogleMapsInitialize();
        });

        $('.tooltip-icon').tooltip({
            placement: 'left'
        });

        //edit delivery type
        $(document).on("click", ".btn-edit-type", function () {
            var DeliveryId = $(this).data("id");
            var DeliveryType = $(this).data("type");
            $("#divUpdateType #UpdateDeliveryId").val(DeliveryId);
            $("#divUpdateType #DeliveryType").val(DeliveryType).trigger("change");
            $("#divUpdateType").modal("show");
        });

        //save edit delivery type
        $(document).on("click", "#btn-confirm-update", function () {
            var $btn = $(this);
            $btn.button("loading");
            var DeliveryId = $("#divUpdateType #UpdateDeliveryId").val();
            var DeliveryType = $("#divUpdateType #DeliveryType").val();
            $.ajax({
                type: "POST",
                url: "/Work/Task/EditDeliveryType",
                data: {
                    DeliveryId: DeliveryId,
                    DeliveryType: DeliveryType,
                },
                success: function (jsonData) {
                    $btn.button("reset");
                    if (jsonData.Success === true) {
                        $("#divUpdateType").modal("hide");
                        location.reload();
                    }
                    else {
                        $("#divUpdateType .alert-message").html(jsonData.Data);
                    }
                }
            });
        });

       

        function numericInput() {
            $('#Property6').number(true);
            $('#Property6').inputFilter(function (value) {
                return /^-?\d*$/.test(value);
            });
        }
    </script>
}
